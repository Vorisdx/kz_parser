import streamlit as st
import pandas as pd
from parser_refactored import AdiletParser
from selenium.common.exceptions import TimeoutException, WebDriverException

st.set_page_config(page_title="Adilet INN Lookup", page_icon="üîç", layout="wide")

st.title("üîç –ü–æ–∏—Å–∫ –ø–æ –±–∞–∑–µ Adilet –ø–æ –ò–ò–ù")

inn = st.text_input(
    "–í–≤–µ–¥–∏—Ç–µ –ò–ò–ù", max_chars=12, help="–¢–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã, –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤ –∏–ª–∏ –¥–µ—Ñ–∏—Å–æ–≤"
)

run = st.button("üîç –ù–∞–π—Ç–∏")

if run:
    inn = inn.strip()
    if not (inn.isdigit() and len(inn) == 12):
        st.error("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ò–ò–ù: –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ä–æ–≤–Ω–æ 12 —Ü–∏—Ñ—Ä.")
        st.stop()

    st.info(f"–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ò–ò–ù **{inn}** ‚Ä¶")

    try:
        parser = AdiletParser(headless=True)
    except WebDriverException as e:
        st.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å WebDriver: {e}")
        st.stop()

    try:
        with st.spinner("–ü–æ–ª—É—á–∞–µ–º –∞—Ä–µ—Å—Ç—ã / –æ–±—Ä–µ–º–µ–Ω–µ–Ω–∏—è ‚Ä¶"):
            arrests_df = parser.parse_arrests([inn])
        with st.spinner("–ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏ ‚Ä¶"):
            debtors_df = parser.parse_debtors([inn])
    except TimeoutException:
        st.error(
            "–ò—Å—Ç–µ–∫ —Ç–∞–π–º-–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ —Å–∞–π—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ."
        )
        arrests_df = pd.DataFrame()
        debtors_df = pd.DataFrame()
    except Exception as e:
        st.exception(e)
        arrests_df = pd.DataFrame()
        debtors_df = pd.DataFrame()

    # -- Render results ----------------------------------------------------
    if arrests_df.empty and debtors_df.empty:
        st.warning("–ü–æ —ç—Ç–æ–º—É –ò–ò–ù –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ ‚õîÔ∏è")
    else:
        if not arrests_df.empty:
            st.subheader("üìë –ê—Ä–µ—Å—Ç—ã / –û–±—Ä–µ–º–µ–Ω–µ–Ω–∏—è")
            st.dataframe(arrests_df, use_container_width=True)
        else:
            st.info("–ê—Ä–µ—Å—Ç—ã / –æ–±—Ä–µ–º–µ–Ω–µ–Ω–∏—è –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã.")

        if not debtors_df.empty:
            st.subheader("üí∏ –°–ø–∏—Å–æ–∫ –¥–æ–ª–∂–Ω–∏–∫–æ–≤")
            st.dataframe(debtors_df, use_container_width=True)
        else:
            st.info("–ò–ò–ù –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ—á–Ω–µ –¥–æ–ª–∂–Ω–∏–∫–æ–≤.")

        # –û–±—â–µ–µ —Ä–µ–∑—é–º–µ
        found = []
        if not arrests_df.empty:
            found.append("–∞—Ä–µ—Å—Ç—ã")
        if not debtors_df.empty:
            found.append("–∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏")
        if found:
            st.success("–ù–∞–π–¥–µ–Ω—ã " + ", ".join(found) + ".")

else:
    st.write("–í–≤–µ–¥–∏—Ç–µ –ò–ò–ù —Å–ª–µ–≤–∞ –∏ –Ω–∞–∂–º–∏—Ç–µ **–ù–∞–π—Ç–∏**.")
